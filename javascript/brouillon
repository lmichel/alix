http://xcatdb.unistra.fr/3xmmdr8/tap/sync?REQUEST=doQuery&LANG=ADQL&QUERY=SELECT TOP 1000 * FROM ivoa.ObsCore10 WHERE CONTAINS (POINT (%27ICRS%27%2C s_ra%2C s_dec%29%2C CIRCLE (%27ICRS%27%2C0%2C 0%2C 0.016%29%29 %3D 1",
http://dc.zah.uni-heidelberg.de/__system__/tap/run/tap/sync?PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT TOP 100 * FROM ivoa.ObsCore WHERE CONTAINS(POINT('ICRS', s_ra, s_dec), CIRCLE('ICRS', {$ra}, {$dec}, 0.016))=1"	

ttp://dc.zah.uni-heidelberg.de/__system__/tap/run/tap/sync?PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT+TOP+100+%2A+FROM+ivoa.ObsCore+WHERE+CONTAINS%28POINT%28%27ICRS%27%2C+s_ra%2C+s_dec%29%2C+CIRCLE%28%27ICRS%27%2C+83.633042%2C+22.014500%2C+0.016%29%29%3D1%0D%0A

http://dc.zah.uni-heidelberg.de/__system__/tap/run/tap/sync?PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT TOP 100 * FROM  &#34;public&#34;.basic WHERE CONTAINS(POINT('ICRS',ra,dec), CIRCLE('ICRS', 68.988479 ,71.748572, 0.016))=1
http://simbad.u-strasbg.fr/simbad/sim-tap/sync?PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT TOP 100 * FROM  &#34;public&#34;.basic WHERE CONTAINS(POINT('ICRS',ra,dec), CIRCLE('ICRS', 68.988479 ,71.748572, 0.016))=1

http://xcatdb.unistra.fr/3xmmdr8/tap/sync?forma=votable/td&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT%20TOP%201000%20%2A%20FROM%20ivoa.ObsCore10%20%20WHERE%20%20%20%20%20%20CONTAINS%28POINT%28%27ICRS%27%2C%20s_ra%2C%20s_dec%29%2C%20CIRCLE%28%27ICRS%27%2C%2083.633042%2C%20%2B22.014500%2C%200.016666666666666666%29%29%20%3D%201
dc.zah.uni-heidelberg.de/__system__/tap/run/tap/sync?PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT%20TOP%20100%20%2A%20FROM%20%20%26%2334%3Bpublic%26%2334%3B.basic%20WHERE%20CONTAINS%28POINT%28%27ICRS%27%2Cra%2Cdec%29%2C%20CIRCLE%28%27ICRS%27%2C%20%7B%24ra%7D%2C%20%7B%24dec%7D%2C%200.016%29%29%3D1
http://simbad.u-strasbg.fr/simbad/sim-tap/sync?forma=votable/td&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT%20TOP%201000%20%2A%20FROM%20%3Bpublic%26%2334%3B.basic%20%20WHERE%20%20%20%20%20%20CONTAINS%28POINT%28%27ICRS%27%2C%20s_ra%2C%20s_dec%29%2C%20CIRCLE%28%27ICRS%27%2C%2083.633042%2C%20%2B22.014500%2C%200.016666666666666666%29%29%20%3D%201"
	
	
	
	
	
	------------------------------simbad-------------------------
	http://simbad.u-strasbg.fr/simbad/sim-tap/sync?forma=votable/td&PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT TOP 100 * FROM "public".basic WHERE CONTAINS(POINT('ICRS',ra,dec), CIRCLE('ICRS', 193.14282,42.404911, 0.016))=1
	
	http://simbad.u-strasbg.fr/simbad/sim-tap/sync?REQUEST=doQuery&PHASE=RUN&FORMAT=votable/td&LANG=ADQL&query=SELECT+TOP+100+*+FROM+%22public%22.basic+WHERE+CONTAINS%28POINT%28%27ICRS%27%2Cra%2Cdec%29%2C+CIRCLE%28%27ICRS%27%2C+193.14282%2C42.404911%2C+0.016%29%29%3D1
	
	
	http://simbad.u-strasbg.fr/simbad/sim-tap/sync?format=votable/td&PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY=SELECT+TOP+100+*+FROM+%22public%22.basic+WHERE+CONTAINS%28POINT%28%27ICRS%27%2Cra%2Cdec%29%2C+CIRCLE%28%27ICRS%27%2C+193.14282%2C42.404911%2C+0.016%29%29%3D1
	
	
								
	Alix apiredi.js
	/**
f * @preserve LICENSE
 * 
 * Copyright (c) 2017 Laurent Michel
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. 
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE. 
**/
var a="ivoa.ObsCore"
var u="http://www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/tap/sync";
var param ="PHASE=RUN&REQUEST=doQuery&LANG=ADQL&QUERY={$query}";
$().ready(function() {
   	$("#addTarget").click(function() {
   		AladinLiteX_mVc.displayTarget(function(ra,dec){  alert([ra, dec]);});
    	});
   	$("#getView").click(function() {
		alert(JSON.stringify(AladinLiteX_mVc.getCurrentView()))
	});
   	$("#changeRef").click(function() {
  	    defaultView = {
	        defaultSurvey: "CDS/P/DSS2/color",
     	        field: {
	       		position: "WR101",
	        	defaultFov: "1",
	        }
  	    };
		AladinLiteX_mVc.setReferenceView(defaultView);
	});
   	$("#changeRefBlue").click(function() {
  	  defaultView = {
    	       // defaultSurvey: "ESAVO/P/XMM/EPIC-RGB",
     	        field: {
     	        	defaultFov: "0.9",
     	        	//position: "M33"
     	        	position:"23.46,30.66"
     	        },
				region: {
	        		type:"array",
	        		value:[
	        			202.86460559637285,47.508903373646355,
	        			202.9658591997302,46.884383185785104,
	        			202.00061058533635,47.16490427482837
	        		]   
 				}
  	    };
  	   defaultView = mixConf(confData.defaultView,defaultView);
  	   AladinLiteX_mVc.setReferenceView(defaultView);
	});
   	$("#center").click(function() {
		AladinLiteX_mVc.returnCenter();
   	});
 })


var confData = {
		parentDivId: "aladin-lite-div",
		defaultView: {
			defaultSurvey: "DSS colored",
			field: {
				position: "M33",
				defaultFov: "0.5",
			},
			panelState: true
		},
		controllers: {
			historic: { },
			regionEditor: { },
			hipsSelector: { }
		}
}


var masTest = {
		defaultView: {
			defaultSurvey: "DSS colored",
		},
		field: {
				position: "83.635209 22.01175",
				defaultFov: "0.5"
			},
		masterResource: {
			affichage :{
				location :{
					url_base:"http://xcatdb.unistra.fr/3xmmdr8/tap/sync?REQUEST=doQuery&LANG=ADQL&QUERY="
						+"SELECT%20TOP%201000%20%2A%20FROM%20ivoa.ObsCore%20%20WHERE%20%20%20%20%20%20CONTAINS%28POINT%28%27ICRS%27%2C%20s_ra%2C%20s_dec%29%2C%20CIRCLE%28%27ICRS%27%2C%2083.633042%2C%20%2B22.014500%2C%200.016666666666666666%29%29%20%3D%201"
						
					//url_base:""+u+"?"+param,
					//url_query:" "+quer(a)+" ",
					
					/*//url_base:"http://saada.unistra.fr/3xmmdr8/getqueryreport?query=Select%20ENTRY%20From%20MergedEntry%20In%20MERGEDCATALOGUE%0AWherePosition%20%7B%0A%20%20%20%20isInCircle(%22{$ra}%20{$dec}%22%2C%20{$fov}%2C%20-%2C%20ICRS)%0A%7D&format={$format}&protocol=auto",
					url_base: "http://saada.unistra.fr/3xmmdr8/getqueryreport?query={$query}&format={$format}&protocol=auto",
					url_query: "Select ENTRY From MergedEntry In MERGEDCATALOGUE WherePosition {isInCircle({$ra} {$dec}, {$fov},-, ICRS)} {$limitQuery}",
					url_limit:  "Order By _n_detections desc Limit 15",
					//url_base:"http://saada.unistra.fr/3xmmdr8/getqueryreport?query=Select%20ENTRY%20From%20MergedEntry%20In%20MERGEDCATALOGUE%0AWhereAttributeSaada%20%7B%0A%20%20%20%20%20_n_detections%20%3C%2010%0A%7D%0AWherePosition%20%7B%0A%20%20%20%20isInCircle(%2223.4621%2030.6599417%22%2C%2029.92462264081761%2C%20-%2C%20ICRS)%0A%7D&format=votable&protocol=auto"
				 defaultView = {
	        defaultSurvey: "CDS/P/DSS2/color",
     	        field: {
	       		position: "WR101",
	        	defaultFov: "1",
	        }
  	    };
				*/},
				progressiveMode: false,
				radiusUnit : 'arcmin',
				format : 'votable',
				label : "3XMM Catalogues",
				description: "Texte plus complet qui donne plus d'informations",
				display:false
			},	
			actions :{
				showAssociated :{
					active:false,
					name:'',
					id : '',
					format : {},
					label:"ACDS Sources",
					url : 'http://saada.unistra.fr/3xmmdr8xinyu/getalixassocie/acdslinks?oid={$oidsaada}&mode=aladinlite',
					description: "Show original data panel",
					handlerFadeOut: true,
					handlerDeleteSource: true
					//This function is to delete the associated blue sources and unselect the source when we click the empty part of AladinLite.  
				},
				showPanel :{
					active:false
					//It's to show or hide the panel of detail. 
				},
				externalProcessing : {
					label: "Show details",
					description: "The function is called when we click a source. We can import other scripts to show more details about the source selected",	
					handlerSelect: function(data,showPanel){
						//CatalogMerged_mVc.draw(data,showPanel);
						//The callback is called when we click a source. We can import other scripts to show more details about the source selected.
					},
					handlerDeselect : function(){
						
					},
					handlerInitial: function(){
						//SourceFilter_mVc.draw();
					}//The handlerFilter function will be called in the beginning when the web is loaded.
				}
			}
		}		
};
 

//------------- genaral configuration of alix to load differente url--------

var ConnectTapService = function(urlbase,table){
	
	
} 


//----- my function ----

var xmm="http://xcatdb.unistra.fr/3xmmdr8/tap/sync";
$().ready(function() {
   	$("#addTarget2").click(function() {
   		//AladinLiteX_mVc.displayTarget(function(ra,dec){a=quer(ra);alert([a, dec]);});
  		var tab = $('#input_target2').val();
		var u =$('#input_url').val();
		var a=quer(tab)
		
		 defaultView = {
	      //  defaultSurvey: "CDS/P/DSS2/color",
     	       /* field: {
	       		position: "M33",
	        	defaultFov: "1",
	        }*/
		field: {
				position: "83.635209 22.01175",
				defaultFov: "0.5"
			},
			
  	    };

		AladinLiteX_mVc.setReferenceView(defaultView);
		if(tab==""||u==""){
			alert("the fields are required")
		}else if(u.trim()==xmm.trim() &tab!=""){
		//var reqXmm ="SELECT%20TOP%201000%20%2A%20FROM%20ivoa.ObsCore%20%20WHERE%20%20%20%20%20%20CONTAINS%28POINT%28%27ICRS%27%2C%20s_ra%2C%20s_dec%29%2C%20CIRCLE%28%27ICRS%27%2C%2083.633042%2C%20%2B22.014500%2C%200.016666666666666666%29%29%20%3D%201"
		
		//masTest.masterResource.affichage.location.url_base=u+"?"+param+""+;
		//masTest.masterResource.affichage.location.url_query=a;
		//alert(masTest.masterResource.affichage.location.url_query+" "+masTest.masterResource.affichage.location.url_base);
		AladinLiteX_mVc.displayDataXml();
		}
		
		//alert(document.URL);
		
		
		//location.reload();
		//
		
			
    	});
//configureALIX(masTest);

   
 })


 function quer(table){
	//var req ="SELECT TOP 100 * FROM "+table+" WHERE CONTAINS(POINT('ICRS', s_ra, s_dec), CIRCLE('ICRS', {$ra}, {$dec}, 0.016))=1";
	var req ="SELECT%20TOP%201000%20%2A%20FROM%20"+table+"%20%20WHERE%20%20%20%20%20%20CONTAINS%28POINT%28%27ICRS%27%2C%20s_ra%2C%20s_dec%29%2C%20CIRCLE%28%27ICRS%27%2C%2083.633042%2C%20%2B22.014500%2C%200.016666666666666666%29%29%20%3D%201"
						
	return req;
}



//var globalUrl = ['http://www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca/tap/sync']



// Get parameters from a URL string;

//--- end my function ----











//--------------------- End ---------------------------------


 var mixConf = function(localData,externalData) {      
for(var key in externalData){
	if(typeof(externalData[key])== "object" && localData[key])
		{
		externalData[key] = mixConf(localData[key],externalData[key])
		}
}
return Object.assign(localData,externalData)
}

var configureALIX = function(){
	if(masTest){
	confData = mixConf(confData,masTest);
	}
	AladinLiteX_mVc.init(confData);
}

 configureALIX(masTest);








///////////////////////////////////// Region ////////////////////////////////////
var values = [];
			values= region.getAladinScript().substring(";").split(" ");
			var t="",f;
     		console.log("VALUES => "+values);

			for(var i=1;i<values.length;i++){
				
				if(values[i].endsWith(";")){
					f=values[i]+","+f;
					
				}else{
					t=values[i]+","+t;
				}
				
				 
				//contentScript[i]=values[i];
				
			}
			var tab1 = t.split(',');
			var t1;
			for(var i=1;i<tab1.length;i++){
				
				if(tab1[i]=="zoom"){
					tab1.splice(i,1)
					f=values[i]+" "+f;
					
				}else{
					t1=tab1[i]+","+t1;
				}
				
			}
			var r=f.split(";")
			var r2 =r[0].split(" ");
			console.log(r.length+"   "+r2[0]+" => "+r[1]+" => "+r[2]+" => "+r[3]+" => "+r[6]);
			//t=t+f;
    		//console.log(t);
			//var tab2 = f.split(';');
			var d=r[1].split(",");
			var d2=r[3].split(",");
			r[1]=d[1];r[3]=d2[1];
			var tab = t1.split(',');
			tab.splice(tab.length-1,1)
			tab.splice(0,1)
			//t1=tab[0];
			
			tab.push(r[1]);tab.push(r2[0]);tab.push(r[3])
			var gootab=[];
			  for(var i=0;i<tab.length;i+=2){
				gootab.push(tab[i],tab[i+1]);
				console.log(tab[i]);
			}  		
		
			console.log(gootab);
			console.log(region.points);
			alert(stcRegion);
			console.log(region.decCenter);
			console.log(region.size);
			console.log(region.raCenter);
			console.log(alixapi.testFigure(stcRegion));
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			*********************************** formator.js 06/2020
			
			
			
/**
 * Singleton encapsulating the formating function 
 * Called each time a result value has to be displayed
 * @returns {___anonymous_ValueFormator}
 */
ValueFormator = function() {
	var raValue = undefined;
	var decValue = undefined;
	var targetName = undefined;
	var isloadAlix =false;
	var isGoodTitle = false;
	var isGoodMessage = false;
	var reset = function(){
		raValue = undefined;
		decValue = undefined;		
	}
	
	/*/ BOTTUM ALIX TO LOAD DATA
	var addAlixButton=function (title,ra,dec,url,ta,ra_name,dec_name,label){
	var h = document.getElementById("title-table");
	var positions=ra+" "+dec;
	var tab=ta;
	var r_name=ra_name;
	var d_name = dec_name;
	h.insertAdjacentHTML("beforeend", "<span class='pagetitlepath'> >  <button id= 'btn_load_alix' class='btn btn-success' class='dl_aladin' href='javascript:void(0););'> &nbsp &nbsp Load &nbsp  Alixc </button></span>");
	//h.insertAdjacentHTML("beforeend", "<span class='pagetitlepath'> >  <button class='btn btn-success ' onclick='alixapi.changeRefBlue(&quot;"+ra+"&quot;,&quot;"+dec+"&quot;);'class='dl_aladin' href='javascript:void(0););'> &nbsp &nbsp ChangeRef </button><br>");
	$().ready(function(){
		$("#btn_load_alix").click(function(){
			//alixapi.showPopupData(title,positions,url,tab,r_name,d_name);
				alixapi.showPopupData({
				     master: {
						 raCenter: ra, 
					     decCenter: dec, 
	                     raColumn: r_name,
	                     decColumn: d_name,
	                     urlPath: url, 
	                     tablePath: tab, 
						 label: label	
						},
						label: label
					 }
				);
		});
		
	});
	
	isloadAlix=true;
	
};*/
	
	/**
	 * 
	 */
	var formatValue = function(columnName, values, tdNode, columnMap) {
		var value = values[columnName.currentColumn];
		if( columnMap.currentColumn == undefined )  {
			Modalinfo.error("formatValue: Missing column number in " + JSON.stringify(columnMap));
			return;
		}
		var value = values[columnMap.currentColumn];
		
		if ( columnMap.s_ra == columnMap.currentColumn){
			raValue = value;
		} else	if ( columnMap.s_dec == columnMap.currentColumn){
			decValue = value;
		} else	if ( columnMap.target_name== columnMap.currentColumn){
			targetName = value;
		}
		/*
		 * To be send to the the datalink processor to setup possible cutout services
		 */
		var fovObject = {s_ra: (columnMap.s_ra != -1)?  parseFloat(values[columnMap.s_ra]) : 9999 ,
				        s_dec: (columnMap.s_dec != -1)? parseFloat(values[columnMap.s_dec]): 9999 ,
						s_fov: (columnMap.s_fov != -1)?parseFloat( values[columnMap.s_fov]): 9999 };
		/*
		 * First case the value is an URL
		 */
		if( value.startsWith("http://") ||  value.startsWith("https://") ) {
			/*
			 * The mime type is specified: we can take into account the type of response without requesting the HTTP header
			 */
			if( columnMap.access_format != -1 ){
				var access_format = values[columnMap.access_format];
				if( access_format.endsWith("content=datalink" ) ){
					tdNode.html("");
					addInfoControl(columnName, tdNode, value);
					addDatalinkControl(value,  tdNode, fovObject);
				} else if( access_format.startsWith("image/") || access_format.startsWith("text/") ){
					processURLInfo( columnName, value, tdNode, fovObject);

				} else  {
					/*
					 * In case of a simple download we he to request the HTTP header anyway to get extra information (zipper, encrypted..)
					 */
					processURLInfo( columnName, value, tdNode, fovObject);
				}
				/*
				 * No mime type specified: We need to request the HTTP header for taking into account the response type
				 */
			} else {
				processURLInfo(columnName, value, tdNode, fovObject);
			} 
			/*
			 * Second case: an atomic value;
			 */
		} else {
			formatSimpleValue(columnName, value, tdNode, columnMap);
		}
	};

	/************************************
	 * Private logic
	 */
	/**
	 * Format value: take into account the format of the string representing the value.
	 * No reference to the context
	 */
		var myNodeInfo = function(f){
				var dataInfos = dataTreeView.getNodeInfos( f );
				return dataInfos;
			}
			
		var columnNames=[];	var i=0;
	var formatSimpleValue = function(columnName, value, tdNode, columnMap) {
		/*
		 * TODO :add SAMP message to Aladin : script.aladin.send
		 */
	
			//alert(columnMap+" , "+columnName);
			
			;
			if(raValue != undefined){
				columnNames[i] =columnName;
				i++;
			} 
		if( value.match(/^((position)|(region)|(polygon))/i) ) {
			addSTCRegionControl(tdNode, value);
			
		} else if ( raValue != undefined && decValue != undefined && 
				(columnMap.s_ra == columnMap.currentColumn || columnMap.s_dec == columnMap.currentColumn) ) {
					// modify link to display it on alix;
			// var alLink = "<a onclick='ModalAladin.aladinExplorer({ target: &quot;" + raValue + " " + decValue + "&quot;, fov: 0.016, title:&quot;...&quot;}, []);'class='dl_aladin' href='javascript:void(0);' title='Send source coord. to Aladin Lite'></a>";
			//tdNode.html(alLink + " " + (new Number(value)).toPrecision(8));
			
		/*	var alLink = "<a onclick='alixapi.showPopup( &quot;"+ raValue + " " + decValue + "&quot;);'class='dl_aladin' href='javascript:void(0);' title='Send source coordo to Alix'></a>";
			tdNode.html(alLink + " " + (new Number(value)).toPrecision(8));*/
		
			if(columnMap.s_ra != -1 && columnMap.s_dec !=-1){
				
				
					
						var ra=raValue;
						var dec=decValue;
						var dec_name = columnNames[1];
						var ra_name = columnNames[0];
						
						//alert(ra_name+"  "+dec_name)
						//alert (getCurrentName().quotedTableName().qualifiedName); 
						var tableBase=  dataTreeView.dataTreePath.schema+"."+dataTreeView.dataTreePath.table;
						var tab=  tableBase.quotedTableName().qualifiedName;
						var urlPath = myNodeInfo(dataTreeView.dataTreePath.nodekey).info.url;
						isloadAlix=true;
						var title = dataTreeView.dataTreePath.nodekey+">"+tab;
						//dataTreeView.showNodeInfos( dataTreePath.nodekey );
					
						var id = "dec_"+ dec.toString().replace(".", "").replace("-", "")
						//console.log(positions+" @@@@@@@@@@@@@@@@@@@@@@@@@  "+urlPath)
						var alLink = "<a id='" + id + "'  class='dl_aladin'  title='Send source coordo to Alix'></a>";
						tdNode.html(alLink + " " + (new Number(value)).toPrecision(8));
			    console.log(tdNode.html())
			    console.log($("#" + id).length)
				tdNode.first().click(function(){
					var dec_name = columnNames[1];
						var ra_name = columnNames[0];
				//alixapi.removePolygone();	
				//alixapi.showPopupData(positions,urlPath,tableBase,ra_name,dec_name);
				
				var label = "TAP "+ dataTreeView.dataTreePath.nodekey + " " + tableBase;
			alixapi.showPopupData({
				     master: {
						 raCenter: ra, 
					     decCenter: dec, 
	                     raColumn: ra_name,
	                     decColumn: dec_name,
	                     urlPath: urlPath, 
	                     tablePath: tableBase, 
						 label: label	
						},
						label: label
					 }
				);
				/****************** /
				 if(isGoodTitle==false){
					var nameTItle =  alixapi.getXmmId(title);
					alixapi.getMessage=alixapi.getFetchingMessage(title);
					isGoodTitle =true;
				}
				if(isGoodMessage==false){
				//var message = alixapi.getFetchingMessage(title);
				alixapi.getMessage=alixapi.getFetchingMessage(title);
				isGooodMessage=true;
				}
				**/
				//console.log(" @@@@@@@@@@@@@@@@@@@@@@@@@ "+positions);
				});
			
						}
				//
			for(var j=0;j<columnNames.length;j++){
				//console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ "+ columnNames[j]+" "+columnNames.length)
			}
			
						
					
			
			
			/*
			 * Array annotation removed from server because of CSIRO for which all data are typed as arra
			 */
		} else if(/* value.startsWith("Array")*/ value.length > 24 ) {
			//console.log(value);
			//tdNode.html("<a title='Data array(click to expand)' class='dl_dataarray' href='#'  onclick='Modalinfo.info(\"" + value + "\", \"Data Array\");'></a>");
			tdNode.html("<span title='" + value + "' style =' cursor: pointer;' onclick='Modalinfo.info(\"" + value + "\", \"Full Value\");'>" + value.substring(0, 23) + " ... </span>");
		} else if( decimaleRegexp.test(value)){
			tdNode.html((new Number(value)).toPrecision(8));
		} else if( bibcodeRegexp.test(value)){
			tdNode.html("<a title=\"bibcode\" HREF='http://cdsads.u-strasbg.fr/cgi-bin/nph-bib_query?" + value + "\" target=blank>" + value + "</A>");
		} else {
			tdNode.html(value);
		}
	}
	var addInfoControl = function(columnName, tdNode, url){
		tdNode.append("<a class='dl_info' title='Get info about' href='#' onclick='resultPaneView.fireGetProductInfo(\"" + url + "\"); return false;'></a>");
	};
	var addDownloadControl = function(columnName, tdNode, url, secureMode, contentEncoding){
		var target = (contentEncoding == "")? "": "target=blank";				
		var dl_class = (secureMode)? "dl_securedownload": 'dl_download';
		var x = "<a class='" + dl_class + "' " + target + " title='Download Data' href='javascript:void(0);' onclick='PageLocation.changeLocation(\"" + url + "\");'></a>";
		tdNode.append(x);
	};	
	var addCartControl = function(columnName, tdNode, url, secureMode){
		if( secureMode ){
			tdNode.append("<a class='dl_securecart' title='Add to cart' href='#' onclick='cartView.fireRestrictedUrl(\"" + dataTreeView.dataTreePath.nodekey + "\", \"" + url + "\"); return false;'/></a>");
		} else {
			tdNode.append("<a class='dl_cart' title='Add to cart' href='#' onclick='cartView.fireAddUrl(\"" + dataTreeView.dataTreePath.nodekey + "\", \"" + url + "\"); return false;'/></a>");
		}
	};	
	var addSampControl = function(columnName, tdNode, url, sampMType, fileName){
		tdNode.append("<a class='dl_samp'     title='Broadcast to SAMP'   href='#' onclick='WebSamp_mVc.fireSendVoreport(\"" 
				+ url + "\",\"" + sampMType + "\", \"" + fileName + "\"); return false;'/></a>");
	};	
	var addPreviewControl = function(columnName, tdNode, url, fileName){
		var title = ((fileName != undefined)?fileName: "") + " preview";
		var x = "<a class='dl_download' title='Data preview' href='javascript:void(0);' onclick='Modalinfo.openIframePanel(\"" + url + "\", \"" + title + "\");'></a>";
		tdNode.append(x);
		
	};	
	var addDatalinkControl = function(url, tdNode, fovObject){
		tdNode.append("<a class='dl_datalink' title='Get LinkedData'/></a>");
		tdNode.children(".dl_datalink").first().click(function() {
			DataLinkBrowser.startCompliantBrowser(url, "forwardxmlresource", fovObject);
		});
	};
	var addSTCRegionControl = function(tdNode, stcRegion) {
		var region = new STCRegion(stcRegion);
		tdNode.html("");
		tdNode.append("<a title='" + stcRegion + " (click to plot)' class='dl_stc' href='#'></a>");
		tdNode.append("<a class='dl_samp' title='Broadcast to SAMP'   href='#' onclick='WebSamp_mVc.fireSendAladinScript(&quot;" + region.getAladinScript() + "&quot;); return false;'/></a>");
		tdNode.first().click(function() {
			var tableBase=  dataTreeView.dataTreePath.schema+"."+dataTreeView.dataTreePath.table;
			var tab=  tableBase.quotedTableName().qualifiedName;
			var title = dataTreeView.dataTreePath.nodekey+">"+tab;
			var label = "TAP "+ dataTreeView.dataTreePath.nodekey + " " + tableBase;
			alixapi.showPopupData({
				     /*master: {
						 raCenter: ra, 
					     decCenter: dec, 
	                     raColumn: ra_name,
	                     decColumn: dec_name,
	                     urlPath: urlPath, 
	                     tablePath: tableBase,     
					 },*/
					 stcRegion: stcRegion,
					 region:region,
					 label: label
				});


			//var tab = alixapi.getPoints(region);

			//var view = BasicGeometry.getEnclosingView(tab);
			//var position = alixapi.getCenter(region);
			//console.log(region.size);
			//console.log("ffff "+stcRegion)
			//console.log("REGION => "+stcRegion);
			//console.log(tdNode);
			//AladinLiteX_mVc.setRegion(stcRegion,1);
			//
					//aladinLite_V.gotoPosition(view.center.ra, view.center.dec);
					//aladinLite_V.setZoom( 1.2*view.size );
			/*alixapi.showPopup(alixapi.getCenter(region));
			if(isGoodTitle==false){
					var nameTItle =  alixapi.getXmmId(title);
					alixapi.getMessage=alixapi.getFetchingMessage(title);
					isGoodTitle =true;
				}
				if(isGoodMessage==false){
				//var message = alixapi.getFetchingMessage(title);
				alixapi.getMessage=alixapi.getFetchingMessage(title);
				isGooodMessage=true;
				}
			console.log("COORDS => "+alixapi.getCoords(stcRegion));
			alixapi.drawPolygone(region,stcRegion);*/
			
			//ModalAladin.aladinExplorer({ region: region, fov: 0.016, title:"STC Region", surveyKeyword: targetName}, []);
			return false;
		})
	}
	/**
	 * Get the URL infos asynchronously: formating must be achieved inside the callback
	 */
	var processURLInfo = function(columnName, url, tdNode, fovObject) {
		$.getJSON("getproductinfo", {jsessionid: sessionID, url: url}, function(jsdata) {
			if( Processing.jsonError(jsdata, "Cannot connect data") ) {
				tdNode.html("Error");
			} else {
				/*
				 * Extract useful header data
				 */
				var cd=null, ct=null, ce=null;
				var contentDisposition = "";
				var contentType = "";
				var contentEncoding = "";
				var secureMode=false;
				var sampMType = "";
				var fileName = "";
				/*
				 * HTTP header parsing
				 */
				$.each(jsdata, function(k, v) {
					if( k == 'ContentDisposition') {
						contentDisposition = v;
						var regex = new RegExp(/filename=(.*)$/) ;
						var results = regex.exec(v);
						if(results){
							fileName = results[1];
						}
					} else if( k == 'ContentType' ) {
						contentType = v;
						if( v.match(/fits$/) ) {
							sampMType = "table.load.fits";
						} else {
							sampMType = "table.load.votable";
						}
					} else if( k == 'ContentEncoding' ) {
						contentEncoding = v;
					} else if( k == 'nokey' &&  v.match('401')  ) {
						secureMode = true;
					}
				});		
				if( fileName == "" ){
					fileName = url.split("/").pop();
				}
				/*
				 * Put the right controls according to the context
				 */
				tdNode.html("");
				if( contentType.endsWith("content=datalink" ) ){
					addInfoControl(columnName, tdNode, url);
					addDatalinkControl(url,  tdNode, fovObject);
				} else if( contentType.match(/fits/) ||  contentType.match(/votable/)) {
					addInfoControl(columnName, tdNode, url);
					addDownloadControl(columnName, tdNode, url, secureMode, contentEncoding);
					addCartControl(columnName, tdNode, url, secureMode);
					addSampControl(columnName, tdNode, url, sampMType, fileName);
				} else if( contentType.startsWith("image/") || contentType.startsWith("text/") ){
					addInfoControl(columnName, tdNode, url);
					addPreviewControl(columnName, tdNode,url,  fileName);	
					addCartControl(columnName, tdNode, url, secureMode);
				} else {
					addInfoControl(columnName, tdNode, url);
					addDownloadControl(columnName, tdNode, url, secureMode, contentEncoding);
					addCartControl(columnName, tdNode, url, secureMode);
				}
			}
		});
	}
	/*
	 * exports
	 */
	var pblc = {};
	pblc.reset = reset;
	pblc.formatValue = formatValue;
	//pblc.addAlixButton=addAlixButton
	return pblc;
}();





						